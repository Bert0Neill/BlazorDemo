@page "/ef_api"

@using System.Net.Http.Json
@using BlazorWASMDemo.Shared
@using BlazorWASMDemo.Shared.ORM.Models
@inject ILogger<EF_API> logger
@inject HttpClient Http

<!--display custom spinner when loading-->
@if (isShowSpinner) {         
    <div class="loading-section">        
        <div class="short-description">Making API Call....</div>
        <div class="loader mt-5">
            <div class="loader-dot dot1"></div>
            <div class="loader-dot dot2"></div>
            <div class="loader-dot dot3"></div>
        </div>
    </div>
}
else { 
    <h3> Entity Framework API Call Results:</h3>
}



 @if (albums != null)
{
    <MudAlert Severity="Severity.Success">Retrieved @albums.Count() records from the API (Entity Framework) call. </MudAlert>
}

<MudDataGrid T="Album" Items="@albums"  EditMode="@(DataGridEditMode.Form)"    
    Bordered="true" Dense="true" EditTrigger="@(DataGridEditTrigger.OnRowClick )">
    <Columns>
        <Column T="Album" Field="AlbumId" Title="Album ID" IsEditable="false" />
        <Column T="Album" Field="Title" Title="Album Name"/>
        <Column T="Album" Field="ArtistId" Title="Artist ID" IsEditable="false"/>
       
        <Column T="Album" CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Outlined.Edit" OnClick="@context.Actions.StartEditingItem" />
            </CellTemplate>
        </Column>
    </Columns>
</MudDataGrid>

@code {
    private Album[]? albums;
    private bool isShowSpinner = false;


    protected override async Task OnInitializedAsync()
    {
        try
        {
            isShowSpinner = true;
            albums = await Http.GetFromJsonAsync<Album[]>("MyMusicStore/GetFilteredAlbnums?filterByArtistName=Led");            
            isShowSpinner = false;
        }
        catch(Exception ex)
        {
            logger.LogError(ex, ex.Message);
        }
        finally
        {
            
        }
    }    
}
